Ульчич.
1 (Ь — 15). Охарактеризуйте призначення драйверів та служб в комп'ютерній системі. Наведіть приклади драйверів та служб.
	Драйвер — програмне забезпечення, призначене для надання операційній системі доступу до апаратного забезпечення певного пристрою. Прикладами драйверів є драйвери принтерів, відео- та звукових карт, системних пристроїв, ACPI-сумісних пристроїв тощо.

	Служби в Microsoft Windows — це додатки, що запускаються операційною системою незалежно від статусу користувача. Схожим концептом у Unix-подібних системах є демони (daemons). Вони призначені для автоматичного і регулярного виконання необхідних, важливих завдань, наприклад, отримання мережевої адреси, очистки диску тощо. Приклади служб: Dhcp — DHCP-клієнт, реєструє та оновлює IP-адреси та DNS-записи; DNScache — виконує кешування отриманих DNS-записів; WUAUSERV — виконує оновлення компонентів операційної системи Windows.

2 (Ч — 15). Розгляньте дії, які необхідно виконати, щоб розробити у візуальному середовищі розробки програму, яка має головне меню.
	Щоб створити програму у візуальному середовищі розробки С++ Builder, необхідно створити новий проект VCL Forms, перейти до Дизайнера форм та додати компонент TMainMenu за допомогою палітри компонентів. Для подальшої розробки головного меню необхідно натиснути на доданий компонент TMainMenu правою клавішою миші та обрати пункт «Menu Designer...». У Дизайнері меню за допомогою контекстного меню (права клавіша миші) можна створювати пункти необхідного меню (Insert), видаляти створені пункти (Delete), вставляти розподільні елементи (Insert Separator) тощо. Після створення необхідних пунктів меню, достатньо закрити вікно Дизайнера меню.
	
3 (У — 14). Поясніть значення понять «форма» та «проект» у візуальному середовищі розробки. Які можливості надає розробнику використання проектів та форм?
	Формою називають компонент, який володіє властивостями вікна і призначений для розташування інших компонентів.

	Проект — це сукупність файлів, з яких складається кінцева програма.
	
	% Из gl70-87.pdf

	Використання форм дозволяє використати та наочно організувати візуальний інтерфейс для кінцевої програми, розміщувати компоненти, необхідні для її правильної роботи, налаштовувати представлення обраних компонентів. 

	Використання проектів дає можливість програмісту зручно керувати усіма необхідними файлами для розробки програмного продукту, налаштовувати параметри процесу зборки проекту, автоматичного управління версіями тощо.

	4 (Л — 7). Label, Panel.
		Label — це компонент, який виводить (додає) текст, що не може бути змінений користувачем на формі.

		Panel — це компонент, який створює пусту панель на формі, на якій можна розмістити інші компоненти. 

	4.1 Охарактеризуйте компоненти інтегрованих середовищ візуальної розробки CBuilder RAD Studio.

	4.2 Розгляньте основні події цих компонентів.
		Основні події компонента Label виконують зазначені дії у таких випадках:
			 OnClick — при одноразовому натисканні на компонент.
			 OnDblClick — при подвійному натисканні на компонент.
			 OnDragDrop — при перетягуванні об'єкту в області компонента.
			 OnDragDrop — при відпущенні перетягуваного об'єкту в області компонента.
			 OnContextPopup — при виклику вспливаючого меню за допомогою правої клавіші миші або з клавіатури.
			 OnMouseActivate — при натисканні клавіші миші, коли курсор вказує на компонент і материнська форма неактивна.
			 OnMouseDown — при натисканні клавіші миші, коли курсор вказує на компонент.
			 OnMouseUp — при натисканні клавіші миші, коли курсор вказує на компонент.
			 OnMouseEnter — при наведенні курсору в область компонента.
			 OnMouseLeave — при виведенні курсору з області компонента.
			 OnMouseMove — при пересуванні курсору в області компонента.

		Для компонента Panel характерні основні події компонента Label, доповнені такими подіями, що виконують задані дії у таких випадках:
			 OnCanResize — при спробі змінити розмір компонента.
			 OnEnter — при отриманні компонентом фокусу.
			 OnExit — при переході фокусу від одного компонента до іншого.
			 OnResize — при закінченні зміни розміру компонента.
			 OnUndock — при відкріпленні (undock) компонента.

	4.3 Вкажіть компоненти, які є аналогами розглянутих в середовищі Visual Studio. Для кожної пари компонентів розгляньте їх спільні риси і відмінності.
		В середовищі Visual Studio аналогічні компоненти мають назви Label, Panel відповідно. Оскільки ці компоненти є базовими для створення програм, за основним функціоналом вони ідентичні: Label відображає текст та дозволяє змінювати його розмір, шрифт, колір, а також інші елементи представлення в обох середовищах; Panel дозволяє вміщувати інструменти в обох середовищах, може підтримувати зміну розміру, відкріплення тощо.
		
		До відмінностей компонентів відносяться наявність та назви властивостей: Visual Studio дозволяє налаштувати більшу кількість властивостей порівняно з C++ Builder. Наприклад, підтримку засобів для людей з обмеженими можливостями: відповідні параметри AccessibleDescription, AccessibleName, AccessibleRole наявні лише у Visual Studio. Наступною відмінністю є кількість і назви подій, пов'язаних з компонентами: Visual Studio знову надає більшу кількість обробників подій, і майже кожна назва змінюється, а в рамках даної модульної контрольної роботи наводити порівняльний список назв не несе користі і не має сенсу. 

	4.4 Для розв'язання яких задач, на Ваш погляд, доцільно використовувати ці компоненти? (Дайте загальну відповідь та наведіть приклад програми, в якій доцільно використати компонент.)
		Компонент Label зазвичай використовується щоб назвати та відмітити для користувача інший компонент на формі. Наприклад, його доцільно використати для позначення полів вводу та результату у програмі, що вираховує швидкість за пройденим шляхом та часом.

		Як правило, компонент Panel використовується для створення панелі інструментів у програмі. Цей компонент доцільно застосувати у графічному редакторі для групування різноманітних інструментів малювання та редагування зображення.

