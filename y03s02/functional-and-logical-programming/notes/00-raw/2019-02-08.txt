В логічній програмі алгоритм розв'язання задачі не описується. Описується умова задачі, а саме вказується, які є об'єкти предметної області, які відношення між ними, а також описується мета, якої необхідно досягти. Основою опису є відношення між об'єктами. 

Логічна програма складається з двох типів висловлювань:
1. Факти, які описують властивості об'єктів. 
2. Правила, які описують відношення між об'єктами. 

Використовуючи факти і правила, наведені в програмі, можна отримати або вивести з наявної інформації нові факти або правила. Крім цього, в логічній програмі вказується мета пошуку. Тобто логічна програма є базою даних про умову задачі. Розв'язання задачі полягає у пошуку способу задоволення заданої мети на основі наявних фактів і правил. Алгоритм цього пошуку реалізований в інтерпретаторі або компіляторі мови програмування. Найбільш поширеною мовою логічного програмування є Prolog, у якого є численні спадкоємці. 

Функційне програмування. Єдина управляюча конструкція в мові функційного програмування — це виклик функції. У функційній мові задана деяка множина базових функцій, а решта функцій будується з них за допомогою композиції. 

Наприклад, ми можемо мати \func{max(a, b)}, тоді $\max{a, \max{(b, c)}}$. Найбільш відомі мови функційного програмування: Lisp, Haskell, Scheme, Standard ML. 

Концептуальне програмування. Це автоматизований синтез програм на основі формальних специфікацій задачі. Специфікація задачі — це її формальний опис: блок-схема, словесний опис, словесний опис і так далі. 

Імперативне і декларативне програмування. 

