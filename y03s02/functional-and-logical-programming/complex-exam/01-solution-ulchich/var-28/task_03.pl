% SWI Prolog
% member(X, L) перевіряє, чи є елемент X в списку L
member2(X, [X|_]).
member2(X, [_|Ys]) :-
    member2(X, Ys).

% subtract2(L1, L2, L3) видаляє зі списку L1 елементи списку L2 і
% повертає результат у списку L3. Інакше кажучи, він породжує такий
% список L3, в якому є лише ті елементи списку L1, яких немає у списку
% L2.
% Якщо L1 — порожній список, то яким би не був список L2, їх спільний
% елемент — порожній список (тобто жодного елемента)
subtract3([], _, []).
% Якщо елемент A є у списку B, не записувати його у список, і перейти
% до наступного елемента зі списку L1.
subtract3([A|As], B, R) :-
    member2(A, B),
    subtract3(As, B, R).
% Якщо ж елемента A немає у списку B, записати його у результуючий
% список, і перейти до наступного елемента зі списку L1.
subtract3([A|As], B, [A|Rs]) :-
    not(member2(A, B)),
    subtract3(As, B, Rs).
